name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0,12 * * *"

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Shanghai"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
        with:
          repository: CrispShark7/Scripts
          path: Scripts-repo

      - name: Scripts
        run: |
          curl -fsSL https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Source/Build.sh | bash
          for file in Scripts-repo/Ruleset/*.list Scripts-repo/*/Ruleset/*.{list,yaml}; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            sed -i -E '/^[[:space:]]*(#|$)/d; s|[[:space:]]*//.*||' "$file"
            sed -i -E '/^IP-CIDR,/!{/^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}/s/^/IP-CIDR,/}' "$file"
            sed -i -E '/^IP-CIDR6,/!{/^[0-9a-fA-F:]+\/[0-9]{1,3}/s/^/IP-CIDR6,/}' "$file"
            tmpfile=$(mktemp)
            # type exclude and include
            # keep_unmatched=0 exclude
            # keep_unmatched=1 include
            awk -v keep_unmatched=0 '
              /^DOMAIN,/         {k=0}
              /^DOMAIN-SUFFIX,/  {k=1}
              /^DOMAIN-KEYWORD,/ {k=2}
              /^DOMAIN-WILDCARD,/{k=3}
              /^IP-CIDR,/        {k=4}
              /^IP-CIDR6,/       {k=5}
              /^IP-ASN,/         {k=6}
              /^GEOIP,/          {k=7}
            { if (k==""){ if (keep_unmatched) k=8 }
              if (k!=""){ rule_lc=tolower($0); if(!seen[rule_lc]++) print k,$0 }; k=""
            } ' "$file" | sort -k1,1n -k2,2 | cut -d' ' -f2- > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Ruleset
        run: |
          for file in Scripts-repo/Ruleset/*.list; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            file_names="$(basename "$file")"
            rule_names="${file_names%.list}"
            rule_count=$(wc -l < "$file")
            tmpfile=$(mktemp)
            {
              echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: QuantumultX
        run: |
          for file in Scripts-repo/QuantumultX/Ruleset/*.list; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            file_names="$(basename "$file")"
            rule_names="${file_names%.list}"
            sed -i -E 's/^DOMAIN(-SUFFIX|-KEYWORD|-WILDCARD)?,/HOST\1,/g' "$file"
            sed -i -E 's/^IP-CIDR6,/IP6-CIDR,/g; s/,no-resolve//g' "$file"
            tmpfile=$(mktemp)
            awk -v policy="$rule_names" '{ print $0 "," policy }' "$file" > "$tmpfile" && mv "$tmpfile" "$file"
            rule_count=$(wc -l < "$file")
            tmpfile=$(mktemp)
            {
              echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Stash
        run: |
          for file in Scripts-repo/Stash/Ruleset/*.yaml; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            file_names="$(basename "$file")"
            rule_names="${file_names%.yaml}"
            if [[ "$rule_names" == "AdBlock" || "$rule_names" == "Advertising" ]]; then
              sed -i -e 's/^DOMAIN,//' -e 's/^DOMAIN-SUFFIX,/+./' "$file"
              tmpfile=$(mktemp)
              awk '{print "  - '\''" $0 "'\''"}' "$file" > "$tmpfile" && mv "$tmpfile" "$file"
            else
              tmpfile=$(mktemp)
              awk '{print "  - " $0}' "$file" > "$tmpfile" && mv "$tmpfile" "$file"
            fi
            rule_count=$(wc -l < "$file")
            tmpfile=$(mktemp)
            {
              echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              echo "payload:"
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Surge
        run: |
          for file in Scripts-repo/Surge/Ruleset/*.list; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            file_names="$(basename "$file")"
            rule_names="${file_names%.list}"
            rule_count=$(wc -l < "$file")
            tmpfile=$(mktemp)
            {
              echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Push Update
        run: |
          cd Scripts-repo
          if [[ -n $(git status -s) ]]; then
            git config --local user.email "${{ github.actor }}@users.noreply.github.com"
            git config --local user.name "${{ github.actor }}"
            git add -A
            git commit -m "$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
            git push origin master
          else
            echo "No changes to commit."
          fi

      - name: Cleanup Workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2